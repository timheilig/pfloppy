class Charset(object):
    def __init__(self):
        self._entries = []

    @staticmethod
    def is_font_specific():
        """
        Determines if the charset is font specific or not.
        :rtype: bool
        """
        return False

    def get_sid(self, name):
        """
        Returns the SID corresponding to the given name, or -1 if name doesn't exist
        :param int name:
        :rtype: int
        """
        for entry in self._entries:
            if entry.name == name:
                return entry.sid
        return -1

    def get_name(self, sid):
        """
        Returns the name corresponding to the given SID, or None if SID doesn't exist
        :param int sid:
        :rtype: str
        """
        for entry in self._entries:
            if entry.sid == sid:
                return entry.name
        return None

    def register(self, sid, name):
        """
        Adds a SID/name combination to the encoding.

        :param int sid:
        :param str name:
        """
        self.add_entry(Entry(sid, name))

    def add_entry(self, entry):
        """
        Add a single entry.
        :param Entry entry:
        """
        self._entries.append(entry)

    def get_entries(self):
        """
        A list of all entries within this charset.
        :rtype: list of entries
        """
        return self._entries


class Entry(object):
    def __init__(self, sid, name):
        self.sid = sid
        self.name = name

    def __repr__(self):
        return "[sid={0}, name={1}".format(self.sid, self.name)


class ISOAdobe(Charset):
    def __init__(self):
        super(ISOAdobe, self).__init__()
        self.register(1, "space")
        self.register(2, "exclam")
        self.register(3, "quotedbl")
        self.register(4, "numbersign")
        self.register(5, "dollar")
        self.register(6, "percent")
        self.register(7, "ampersand")
        self.register(8, "quoteright")
        self.register(9, "parenleft")
        self.register(10, "parenright")
        self.register(11, "asterisk")
        self.register(12, "plus")
        self.register(13, "comma")
        self.register(14, "hyphen")
        self.register(15, "period")
        self.register(16, "slash")
        self.register(17, "zero")
        self.register(18, "one")
        self.register(19, "two")
        self.register(20, "three")
        self.register(21, "four")
        self.register(22, "five")
        self.register(23, "six")
        self.register(24, "seven")
        self.register(25, "eight")
        self.register(26, "nine")
        self.register(27, "colon")
        self.register(28, "semicolon")
        self.register(29, "less")
        self.register(30, "equal")
        self.register(31, "greater")
        self.register(32, "question")
        self.register(33, "at")
        self.register(34, "A")
        self.register(35, "B")
        self.register(36, "C")
        self.register(37, "D")
        self.register(38, "E")
        self.register(39, "F")
        self.register(40, "G")
        self.register(41, "H")
        self.register(42, "I")
        self.register(43, "J")
        self.register(44, "K")
        self.register(45, "L")
        self.register(46, "M")
        self.register(47, "N")
        self.register(48, "O")
        self.register(49, "P")
        self.register(50, "Q")
        self.register(51, "R")
        self.register(52, "S")
        self.register(53, "T")
        self.register(54, "U")
        self.register(55, "V")
        self.register(56, "W")
        self.register(57, "X")
        self.register(58, "Y")
        self.register(59, "Z")
        self.register(60, "bracketleft")
        self.register(61, "backslash")
        self.register(62, "bracketright")
        self.register(63, "asciicircum")
        self.register(64, "underscore")
        self.register(65, "quoteleft")
        self.register(66, "a")
        self.register(67, "b")
        self.register(68, "c")
        self.register(69, "d")
        self.register(70, "e")
        self.register(71, "f")
        self.register(72, "g")
        self.register(73, "h")
        self.register(74, "i")
        self.register(75, "j")
        self.register(76, "k")
        self.register(77, "l")
        self.register(78, "m")
        self.register(79, "n")
        self.register(80, "o")
        self.register(81, "p")
        self.register(82, "q")
        self.register(83, "r")
        self.register(84, "s")
        self.register(85, "t")
        self.register(86, "u")
        self.register(87, "v")
        self.register(88, "w")
        self.register(89, "x")
        self.register(90, "y")
        self.register(91, "z")
        self.register(92, "braceleft")
        self.register(93, "bar")
        self.register(94, "braceright")
        self.register(95, "asciitilde")
        self.register(96, "exclamdown")
        self.register(97, "cent")
        self.register(98, "sterling")
        self.register(99, "fraction")
        self.register(100, "yen")
        self.register(101, "florin")
        self.register(102, "section")
        self.register(103, "currency")
        self.register(104, "quotesingle")
        self.register(105, "quotedblleft")
        self.register(106, "guillemotleft")
        self.register(107, "guilsinglleft")
        self.register(108, "guilsinglright")
        self.register(109, "fi")
        self.register(110, "fl")
        self.register(111, "endash")
        self.register(112, "dagger")
        self.register(113, "daggerdbl")
        self.register(114, "periodcentered")
        self.register(115, "paragraph")
        self.register(116, "bullet")
        self.register(117, "quotesinglbase")
        self.register(118, "quotedblbase")
        self.register(119, "quotedblright")
        self.register(120, "guillemotright")
        self.register(121, "ellipsis")
        self.register(122, "perthousand")
        self.register(123, "questiondown")
        self.register(124, "grave")
        self.register(125, "acute")
        self.register(126, "circumflex")
        self.register(127, "tilde")
        self.register(128, "macron")
        self.register(129, "breve")
        self.register(130, "dotaccent")
        self.register(131, "dieresis")
        self.register(132, "ring")
        self.register(133, "cedilla")
        self.register(134, "hungarumlaut")
        self.register(135, "ogonek")
        self.register(136, "caron")
        self.register(137, "emdash")
        self.register(138, "AE")
        self.register(139, "ordfeminine")
        self.register(140, "Lslash")
        self.register(141, "Oslash")
        self.register(142, "OE")
        self.register(143, "ordmasculine")
        self.register(144, "ae")
        self.register(145, "dotlessi")
        self.register(146, "lslash")
        self.register(147, "oslash")
        self.register(148, "oe")
        self.register(149, "germandbls")
        self.register(150, "onesuperior")
        self.register(151, "logicalnot")
        self.register(152, "mu")
        self.register(153, "trademark")
        self.register(154, "Eth")
        self.register(155, "onehalf")
        self.register(156, "plusminus")
        self.register(157, "Thorn")
        self.register(158, "onequarter")
        self.register(159, "divide")
        self.register(160, "brokenbar")
        self.register(161, "degree")
        self.register(162, "thorn")
        self.register(163, "threequarters")
        self.register(164, "twosuperior")
        self.register(165, "registered")
        self.register(166, "minus")
        self.register(167, "eth")
        self.register(168, "multiply")
        self.register(169, "threesuperior")
        self.register(170, "copyright")
        self.register(171, "Aacute")
        self.register(172, "Acircumflex")
        self.register(173, "Adieresis")
        self.register(174, "Agrave")
        self.register(175, "Aring")
        self.register(176, "Atilde")
        self.register(177, "Ccedilla")
        self.register(178, "Eacute")
        self.register(179, "Ecircumflex")
        self.register(180, "Edieresis")
        self.register(181, "Egrave")
        self.register(182, "Iacute")
        self.register(183, "Icircumflex")
        self.register(184, "Idieresis")
        self.register(185, "Igrave")
        self.register(186, "Ntilde")
        self.register(187, "Oacute")
        self.register(188, "Ocircumflex")
        self.register(189, "Odieresis")
        self.register(190, "Ograve")
        self.register(191, "Otilde")
        self.register(192, "Scaron")
        self.register(193, "Uacute")
        self.register(194, "Ucircumflex")
        self.register(195, "Udieresis")
        self.register(196, "Ugrave")
        self.register(197, "Yacute")
        self.register(198, "Ydieresis")
        self.register(199, "Zcaron")
        self.register(200, "aacute")
        self.register(201, "acircumflex")
        self.register(202, "adieresis")
        self.register(203, "agrave")
        self.register(204, "aring")
        self.register(205, "atilde")
        self.register(206, "ccedilla")
        self.register(207, "eacute")
        self.register(208, "ecircumflex")
        self.register(209, "edieresis")
        self.register(210, "egrave")
        self.register(211, "iacute")
        self.register(212, "icircumflex")
        self.register(213, "idieresis")
        self.register(214, "igrave")
        self.register(215, "ntilde")
        self.register(216, "oacute")
        self.register(217, "ocircumflex")
        self.register(218, "odieresis")
        self.register(219, "ograve")
        self.register(220, "otilde")
        self.register(221, "scaron")
        self.register(222, "uacute")
        self.register(223, "ucircumflex")
        self.register(224, "udieresis")
        self.register(225, "ugrave")
        self.register(226, "yacute")
        self.register(227, "ydieresis")
        self.register(228, "zcaron")


class Expert(Charset):
    def __init__(self):
        super(Expert, self).__init__()
        self.register(1, "space")
        self.register(13, "comma")
        self.register(14, "hyphen")
        self.register(15, "period")
        self.register(27, "colon")
        self.register(28, "semicolon")
        self.register(99, "fraction")
        self.register(109, "fi")
        self.register(110, "fl")
        self.register(150, "onesuperior")
        self.register(155, "onehalf")
        self.register(158, "onequarter")
        self.register(163, "threequarters")
        self.register(164, "twosuperior")
        self.register(169, "threesuperior")
        self.register(229, "exclamsmall")
        self.register(230, "Hungarumlautsmall")
        self.register(231, "dollaroldstyle")
        self.register(232, "dollarsuperior")
        self.register(233, "ampersandsmall")
        self.register(234, "Acutesmall")
        self.register(235, "parenleftsuperior")
        self.register(236, "parenrightsuperior")
        self.register(237, "twodotenleader")
        self.register(238, "onedotenleader")
        self.register(239, "zerooldstyle")
        self.register(240, "oneoldstyle")
        self.register(241, "twooldstyle")
        self.register(242, "threeoldstyle")
        self.register(243, "fouroldstyle")
        self.register(244, "fiveoldstyle")
        self.register(245, "sixoldstyle")
        self.register(246, "sevenoldstyle")
        self.register(247, "eightoldstyle")
        self.register(248, "nineoldstyle")
        self.register(249, "commasuperior")
        self.register(250, "threequartersemdash")
        self.register(251, "periodsuperior")
        self.register(252, "questionsmall")
        self.register(253, "asuperior")
        self.register(254, "bsuperior")
        self.register(255, "centsuperior")
        self.register(256, "dsuperior")
        self.register(257, "esuperior")
        self.register(258, "isuperior")
        self.register(259, "lsuperior")
        self.register(260, "msuperior")
        self.register(261, "nsuperior")
        self.register(262, "osuperior")
        self.register(263, "rsuperior")
        self.register(264, "ssuperior")
        self.register(265, "tsuperior")
        self.register(266, "ff")
        self.register(267, "ffi")
        self.register(268, "ffl")
        self.register(269, "parenleftinferior")
        self.register(270, "parenrightinferior")
        self.register(271, "Circumflexsmall")
        self.register(272, "hyphensuperior")
        self.register(273, "Gravesmall")
        self.register(274, "Asmall")
        self.register(275, "Bsmall")
        self.register(276, "Csmall")
        self.register(277, "Dsmall")
        self.register(278, "Esmall")
        self.register(279, "Fsmall")
        self.register(280, "Gsmall")
        self.register(281, "Hsmall")
        self.register(282, "Ismall")
        self.register(283, "Jsmall")
        self.register(284, "Ksmall")
        self.register(285, "Lsmall")
        self.register(286, "Msmall")
        self.register(287, "Nsmall")
        self.register(288, "Osmall")
        self.register(289, "Psmall")
        self.register(290, "Qsmall")
        self.register(291, "Rsmall")
        self.register(292, "Ssmall")
        self.register(293, "Tsmall")
        self.register(294, "Usmall")
        self.register(295, "Vsmall")
        self.register(296, "Wsmall")
        self.register(297, "Xsmall")
        self.register(298, "Ysmall")
        self.register(299, "Zsmall")
        self.register(300, "colonmonetary")
        self.register(301, "onefitted")
        self.register(302, "rupiah")
        self.register(303, "Tildesmall")
        self.register(304, "exclamdownsmall")
        self.register(305, "centoldstyle")
        self.register(306, "Lslashsmall")
        self.register(307, "Scaronsmall")
        self.register(308, "Zcaronsmall")
        self.register(309, "Dieresissmall")
        self.register(310, "Brevesmall")
        self.register(311, "Caronsmall")
        self.register(312, "Dotaccentsmall")
        self.register(313, "Macronsmall")
        self.register(314, "figuredash")
        self.register(315, "hypheninferior")
        self.register(316, "Ogoneksmall")
        self.register(317, "Ringsmall")
        self.register(318, "Cedillasmall")
        self.register(319, "questiondownsmall")
        self.register(320, "oneeighth")
        self.register(321, "threeeighths")
        self.register(322, "fiveeighths")
        self.register(323, "seveneighths")
        self.register(324, "onethird")
        self.register(325, "twothirds")
        self.register(326, "zerosuperior")
        self.register(327, "foursuperior")
        self.register(328, "fivesuperior")
        self.register(329, "sixsuperior")
        self.register(330, "sevensuperior")
        self.register(331, "eightsuperior")
        self.register(332, "ninesuperior")
        self.register(333, "zeroinferior")
        self.register(334, "oneinferior")
        self.register(335, "twoinferior")
        self.register(336, "threeinferior")
        self.register(337, "fourinferior")
        self.register(338, "fiveinferior")
        self.register(339, "sixinferior")
        self.register(340, "seveninferior")
        self.register(341, "eightinferior")
        self.register(342, "nineinferior")
        self.register(343, "centinferior")
        self.register(344, "dollarinferior")
        self.register(345, "periodinferior")
        self.register(346, "commainferior")
        self.register(347, "Agravesmall")
        self.register(348, "Aacutesmall")
        self.register(349, "Acircumflexsmall")
        self.register(350, "Atildesmall")
        self.register(351, "Adieresissmall")
        self.register(352, "Aringsmall")
        self.register(353, "AEsmall")
        self.register(354, "Ccedillasmall")
        self.register(355, "Egravesmall")
        self.register(356, "Eacutesmall")
        self.register(357, "Ecircumflexsmall")
        self.register(358, "Edieresissmall")
        self.register(359, "Igravesmall")
        self.register(360, "Iacutesmall")
        self.register(361, "Icircumflexsmall")
        self.register(362, "Idieresissmall")
        self.register(363, "Ethsmall")
        self.register(364, "Ntildesmall")
        self.register(365, "Ogravesmall")
        self.register(366, "Oacutesmall")
        self.register(367, "Ocircumflexsmall")
        self.register(368, "Otildesmall")
        self.register(369, "Odieresissmall")
        self.register(370, "OEsmall")
        self.register(371, "Oslashsmall")
        self.register(372, "Ugravesmall")
        self.register(373, "Uacutesmall")
        self.register(374, "Ucircumflexsmall")
        self.register(375, "Udieresissmall")
        self.register(376, "Yacutesmall")
        self.register(377, "Thornsmall")
        self.register(378, "Ydieresissmall")


class ExpertSubset(Charset):
    def __init__(self):
        super(ExpertSubset, self).__init__()
        self.register(1, "space")
        self.register(13, "comma")
        self.register(14, "hyphen")
        self.register(15, "period")
        self.register(27, "colon")
        self.register(28, "semicolon")
        self.register(99, "fraction")
        self.register(109, "fi")
        self.register(110, "fl")
        self.register(150, "onesuperior")
        self.register(155, "onehalf")
        self.register(158, "onequarter")
        self.register(163, "threequarters")
        self.register(164, "twosuperior")
        self.register(169, "threesuperior")
        self.register(231, "dollaroldstyle")
        self.register(232, "dollarsuperior")
        self.register(235, "parenleftsuperior")
        self.register(236, "parenrightsuperior")
        self.register(237, "twodotenleader")
        self.register(238, "onedotenleader")
        self.register(239, "zerooldstyle")
        self.register(240, "oneoldstyle")
        self.register(241, "twooldstyle")
        self.register(242, "threeoldstyle")
        self.register(243, "fouroldstyle")
        self.register(244, "fiveoldstyle")
        self.register(245, "sixoldstyle")
        self.register(246, "sevenoldstyle")
        self.register(247, "eightoldstyle")
        self.register(248, "nineoldstyle")
        self.register(249, "commasuperior")
        self.register(250, "threequartersemdash")
        self.register(251, "periodsuperior")
        self.register(253, "asuperior")
        self.register(254, "bsuperior")
        self.register(255, "centsuperior")
        self.register(256, "dsuperior")
        self.register(257, "esuperior")
        self.register(258, "isuperior")
        self.register(259, "lsuperior")
        self.register(260, "msuperior")
        self.register(261, "nsuperior")
        self.register(262, "osuperior")
        self.register(263, "rsuperior")
        self.register(264, "ssuperior")
        self.register(265, "tsuperior")
        self.register(266, "ff")
        self.register(267, "ffi")
        self.register(268, "ffl")
        self.register(269, "parenleftinferior")
        self.register(270, "parenrightinferior")
        self.register(272, "hyphensuperior")
        self.register(300, "colonmonetary")
        self.register(301, "onefitted")
        self.register(302, "rupiah")
        self.register(305, "centoldstyle")
        self.register(314, "figuredash")
        self.register(315, "hypheninferior")
        self.register(320, "oneeighth")
        self.register(321, "threeeighths")
        self.register(322, "fiveeighths")
        self.register(323, "seveneighths")
        self.register(324, "onethird")
        self.register(325, "twothirds")
        self.register(326, "zerosuperior")
        self.register(327, "foursuperior")
        self.register(328, "fivesuperior")
        self.register(329, "sixsuperior")
        self.register(330, "sevensuperior")
        self.register(331, "eightsuperior")
        self.register(332, "ninesuperior")
        self.register(333, "zeroinferior")
        self.register(334, "oneinferior")
        self.register(335, "twoinferior")
        self.register(336, "threeinferior")
        self.register(337, "fourinferior")
        self.register(338, "fiveinferior")
        self.register(339, "sixinferior")
        self.register(340, "seveninferior")
        self.register(341, "eightinferior")
        self.register(342, "nineinferior")
        self.register(343, "centinferior")
        self.register(344, "dollarinferior")
        self.register(345, "periodinferior")
        self.register(346, "commainferior")
